{"version":3,"file":"static/js/57.9146cde5.chunk.js","mappings":"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","sources":["components/Projects.jsx","components/projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport { ThemeContext } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\n\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport ProjectCard from './projects/ProjectCard';\nimport FallbackSpinner from './utils/FallbackSpinner';\n\nconst styles = {\n    containerStyle: {\n        marginTop: 10,\n        marginBottom: 100,\n    },\n};\n\nconst Projects = (props) => {\n    const theme = useContext(ThemeContext);\n    const { header } = props;\n\n    const [data, setData] = useState(null);\n\n    useEffect(() => {\n        fetch(endpoints.projects, {\n            method: 'GET',\n        })\n            .then((res) => {\n                console.log(res);\n                return res.json();\n            })\n            .then((res) => {\n                console.log('Fetched projects data:', res);\n                setData(res);\n            })\n            .catch((err) => err);\n    }, []);\n\n    return (\n        <>\n            {data ? (\n                <div className=\"section-content-container\">\n                    <Container style={styles.containerStyle}>\n                        <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n                            {data.projects\n                                ?.slice(0, data.length)\n                                .sort((a, b) => new Date(b.endDate) - new Date(a.endDate))\n                                .map((project) => (\n                                    <Fade key={project.title}>\n                                        <ProjectCard project={project} />\n                                    </Fade>\n                                ))}\n                        </Row>\n                    </Container>\n                </div>\n            ) : (\n                <FallbackSpinner />\n            )}\n        </>\n    );\n};\n\nProjects.propTypes = {\n    header: PropTypes.string.isRequired,\n};\n\nexport default Projects;\n","import React, { useContext } from 'react';\nimport { Button, Card, Badge, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// import { Link } from 'react-router-dom'; // Import Link for routing\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n    // badgeStyle: {\n    //   paddingLeft: 10,\n    //   paddingRight: 10,\n    //   paddingTop: 5,\n    //   paddingBottom: 5,\n    //   margin: 5,\n    // },\n\n    cardStyle: {\n        borderRadius: 10,\n        overflow: 'hidden', // Ensures content stays within card boundaries\n        height: '600px', // Ensures the card takes up the full height of its container\n        border: 'none', // Remove the border\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.05)', // Subtle shadow for depth\n    },\n\n    cardTitleStyle: {\n        fontSize: '1.3em',\n        fontWeight: 500,\n        alignItems: 'center',\n    },\n\n    cardTextStyle: {\n        margin: '10px 0 5px',\n        textAlign: 'left',\n        fontSize: '0.7em',\n        width: '100%',\n        lineHeight: '1.4', // Adjust line height for better readability\n    },\n\n    cardImageStyle: {\n        height: '230px', // Set a fixed height for images\n        objectFit: 'cover',\n        borderRadius: '5px 5px 5px 5px',\n        objectPosition: 'center',\n        width: '100%',\n    },\n    //   cardImageStyle: {\n    //     height: '270px',\n    //     objectFit: 'contain',\n    //     borderRadius: '5px 5px 5px 5px',\n    //     objectPosition: 'center',\n    //     width: '100%',\n    // },\n    linkStyle: {\n        textDecoration: 'none',\n        padding: 10,\n        fontWeight: 'bold',\n        fontFamily: 'Times New Roman, serif',\n        color: '#49bf9d',\n        transition: 'color 0.3s',\n    },\n\n    linkHoverStyle: {\n        color: '#007bff', // Change to desired hover color for title\n    },\n\n    githubIconStyle: {\n        marginLeft: 'auto',\n        color: '#FFD700',\n        textDecoration: 'none',\n        transition: 'color 0.3s',\n    },\n\n    githubIconHoverStyle: {\n        color: '#007bff',\n        transform: 'scale(1.2) rotate(30deg)',\n    },\n\n    // buttonStyle: {\n    //   margin: 5,\n    // },\n\n    dateStyle: {\n        fontSize: '1em',\n        color: '#888',\n        marginTop: '5px',\n        fontFamily: 'Times New Roman, serif',\n    },\n};\n\nconst componentsRenders = {\n    ul: ({ children }) => <ul style={{ paddingLeft: '0rem', paddingBottom: '0rem' }}>{children}</ul>,\n    ol: ({ children }) => <ol style={{ paddingLeft: '0rem' }}>{children}</ol>,\n    li: ({ children }) => <li style={{ paddingBottom: '0.3rem' }}>{children}</li>,\n};\n\nconst ExternalNavLink = styled.a`\n    &:hover {\n        color: ${(props) => props.theme.navbarTheme.linkHoverColor};\n    }\n    &::after {\n        background-color: ${(props) => props.theme.accentColor};\n    }\n`;\n\nconst ProjectCard = (props) => {\n    const theme = useContext(ThemeContext);\n    const parseBodyText = (text) => <ReactMarkdown children={text} components={componentsRenders} />;\n    const { projects } = props;\n    const projectArray = Object.values(projects);\n\n    const groupedProjects = {\n        'Course Projects': projectArray.filter((p) => p.type === 'course'),\n        'Research Projects': projectArray.filter((p) => p.type === 'research'),\n        'Other Projects': projectArray.filter((p) => p.type === 'others'),\n    };\n\n    // Function to render category title and line\n    const renderCategoryTitle = (type, _project) => {\n        return (\n            <>\n                <h4 style={{ textAlign: 'center', margin: '10px 0' }}>{type}</h4>\n                <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                    {_project.map((project) => (\n                        <Card\n                            style={{\n                                ...styles.cardStyle,\n                                backgroundColor: theme.cardBackground,\n                                borderColor: theme.cardBorderColor,\n                            }}\n                            text={theme.bsSecondaryVariant}\n                        >\n                            {project?.mediaType === 'video' ? (\n                                <Card.Img variant=\"top\" as=\"video\" controls loop style={styles.cardImageStyle}>\n                                    <source src={project?.image} type=\"video/mp4\" />\n                                    Your browser does not support the video tag.\n                                </Card.Img>\n                            ) : (\n                                <Card.Img variant=\"top\" src={project?.image} style={styles.cardImageStyle} />\n                            )}\n\n                            <Card.Body>\n                                <hr style={{ border: '1px solid #ddd', margin: '5px 0' }} />\n                                <Card.Title style={styles.cardTitleStyle}>\n                                    <ExternalNavLink\n                                        key={project.title}\n                                        href={`/${project.title.replace(/\\s+/g, '-')}`}\n                                        theme={theme}\n                                        style={styles.linkStyle}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        onMouseEnter={(e) =>\n                                            (e.currentTarget.style.color = styles.linkHoverStyle.color)\n                                        }\n                                        onMouseLeave={(e) => (e.currentTarget.style.color = styles.linkStyle.color)}\n                                    >\n                                        {project.title}\n                                    </ExternalNavLink>\n\n                                    {project.githubUrl && (\n                                        <a\n                                            href={project.githubUrl}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            style={styles.githubIconStyle}\n                                            aria-label=\"Open GitHub repository\"\n                                            onMouseEnter={(e) => {\n                                                e.currentTarget.style.color = styles.githubIconHoverStyle.color;\n                                                e.currentTarget.style.transform = styles.githubIconHoverStyle.transform;\n                                            }}\n                                            onMouseLeave={(e) => {\n                                                e.currentTarget.style.color = styles.githubIconStyle.color;\n                                                e.currentTarget.style.transform = 'scale(1) rotate(0deg)';\n                                            }}\n                                        >\n                                            <FontAwesomeIcon icon={faGithub} />\n                                        </a>\n                                    )}\n                                </Card.Title>\n\n                                <Card.Text style={styles.dateStyle}>\n                                    <FontAwesomeIcon icon={faCalendarAlt} style={styles.yearIcon} />\n                                    &nbsp;&nbsp;\n                                    {new Date(project.startDate).toLocaleDateString()}\n                                    &nbsp;-&nbsp;\n                                    {new Date(project.endDate).toLocaleDateString()}\n                                </Card.Text>\n\n                                <Card.Text style={styles.cardTextStyle}>{parseBodyText(project.bodyText)}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </div>\n                <hr style={{ border: '1px solid #ccc', margin: '10px 0' }} />\n            </>\n        );\n    };\n\n    return (\n        <Col>\n            {Object.keys(groupedProjects).map((type) => {\n                if (groupedProjects[type].length > 0) {\n                    return renderCategoryTitle(type, groupedProjects[type]);\n                }\n                return null; // Skip empty categories\n            })}\n        </Col>\n    );\n\n    // return (\n    //     <Col>\n    //         <Card\n    //             style={{\n    //                 ...styles.cardStyle,\n    //                 backgroundColor: theme.cardBackground,\n    //                 borderColor: theme.cardBorderColor,\n    //             }}\n    //             text={theme.bsSecondaryVariant}\n    //         >\n    //             {project?.mediaType === 'video' ? (\n    //                 <Card.Img variant=\"top\" as=\"video\" controls loop style={styles.cardImageStyle}>\n    //                     <source src={project?.image} type=\"video/mp4\" />\n    //                     Your browser does not support the video tag.\n    //                 </Card.Img>\n    //             ) : (\n    //                 <Card.Img variant=\"top\" src={project?.image} style={styles.cardImageStyle} />\n    //             )}\n\n    //             <Card.Body>\n    //                 <hr style={{ border: '1px solid #ddd', margin: '5px 0' }} />\n    //                 <Card.Title style={styles.cardTitleStyle}>\n    //                     <ExternalNavLink\n    //                         key={project.title}\n    //                         href={`/${project.title.replace(/\\s+/g, '-')}`}\n    //                         theme={theme}\n    //                         style={styles.linkStyle}\n    //                         target=\"_blank\"\n    //                         rel=\"noopener noreferrer\"\n    //                         onMouseEnter={(e) => (e.currentTarget.style.color = styles.linkHoverStyle.color)}\n    //                         onMouseLeave={(e) => (e.currentTarget.style.color = styles.linkStyle.color)}\n    //                     >\n    //                         {project.title}\n    //                     </ExternalNavLink>\n\n    //                     {project.githubUrl && (\n    //                         <a\n    //                             href={project.githubUrl}\n    //                             target=\"_blank\"\n    //                             rel=\"noopener noreferrer\"\n    //                             style={styles.githubIconStyle}\n    //                             aria-label=\"Open GitHub repository\"\n    //                             onMouseEnter={(e) => {\n    //                                 e.currentTarget.style.color = styles.githubIconHoverStyle.color;\n    //                                 e.currentTarget.style.transform = styles.githubIconHoverStyle.transform;\n    //                             }}\n    //                             onMouseLeave={(e) => {\n    //                                 e.currentTarget.style.color = styles.githubIconStyle.color;\n    //                                 e.currentTarget.style.transform = 'scale(1) rotate(0deg)';\n    //                             }}\n    //                         >\n    //                             <FontAwesomeIcon icon={faGithub} />\n    //                         </a>\n    //                     )}\n    //                 </Card.Title>\n\n    //                 <Card.Text style={styles.dateStyle}>\n    //                     <FontAwesomeIcon icon={faCalendarAlt} style={styles.yearIcon} />\n    //                     &nbsp;&nbsp;\n    //                     {new Date(project.startDate).toLocaleDateString()}\n    //                     &nbsp;-&nbsp;\n    //                     {new Date(project.endDate).toLocaleDateString()}\n    //                 </Card.Text>\n\n    //                 <Card.Text style={styles.cardTextStyle}>{parseBodyText(project.bodyText)}</Card.Text>\n    //             </Card.Body>\n    //         </Card>\n    //     </Col>\n    // );\n};\n\nProjectCard.propTypes = {\n    projects: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        bodyText: PropTypes.string.isRequired,\n\n        image: PropTypes.string,\n        mediaType: PropTypes.string,\n        type: PropTypes.string.isRequired,\n\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                text: PropTypes.string.isRequired,\n                href: PropTypes.string.isRequired,\n            })\n        ),\n\n        tags: PropTypes.arrayOf(PropTypes.string),\n        startDate: PropTypes.string.isRequired,\n        endDate: PropTypes.string.isRequired,\n        githubUrl: PropTypes.string,\n        detailsUrl: PropTypes.string,\n    }).isRequired,\n};\n\nexport default ProjectCard;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["styles","containerStyle","marginTop","marginBottom","props","_data$projects","useContext","ThemeContext","header","data","setData","useState","useEffect","fetch","endpoints","projects","method","then","res","console","log","json","catch","err","_jsx","_Fragment","children","className","Container","style","Row","xs","sm","md","lg","slice","length","sort","a","b","Date","endDate","map","project","Fade","ProjectCard","title","FallbackSpinner","cardStyle","borderRadius","overflow","height","border","display","flexDirection","justifyContent","boxShadow","cardTitleStyle","fontSize","fontWeight","alignItems","cardTextStyle","margin","textAlign","width","lineHeight","cardImageStyle","objectFit","objectPosition","linkStyle","textDecoration","padding","fontFamily","color","transition","linkHoverStyle","githubIconStyle","marginLeft","githubIconHoverStyle","transform","dateStyle","componentsRenders","ul","_ref","paddingLeft","paddingBottom","ol","_ref2","li","_ref3","ExternalNavLink","styled","theme","navbarTheme","linkHoverColor","accentColor","projectArray","Object","values","groupedProjects","filter","p","type","Col","keys","renderCategoryTitle","_project","_jsxs","flexWrap","Card","backgroundColor","cardBackground","borderColor","cardBorderColor","text","bsSecondaryVariant","mediaType","Img","variant","as","controls","loop","src","image","Body","Title","href","replace","target","rel","onMouseEnter","e","currentTarget","onMouseLeave","githubUrl","FontAwesomeIcon","icon","faGithub","Text","faCalendarAlt","yearIcon","startDate","toLocaleDateString","bodyText","ReactMarkdown","components","CardBody","React","ref","bsPrefix","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","body","assign","Subtitle","Link","Header","Footer","ImgOverlay"],"sourceRoot":""}