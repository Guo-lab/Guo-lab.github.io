{"version":3,"file":"static/js/621.4b259e57.chunk.js","mappings":"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","sources":["components/projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Button, Card, Badge, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\n// import { Link } from 'react-router-dom'; // Import Link for routing\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst styles = {\n    // badgeStyle: {\n    //   paddingLeft: 10,\n    //   paddingRight: 10,\n    //   paddingTop: 5,\n    //   paddingBottom: 5,\n    //   margin: 5,\n    // },\n\n    cardStyle: {\n        borderRadius: 10,\n        overflow: 'hidden', // Ensures content stays within card boundaries\n        height: '600px', // Ensures the card takes up the full height of its container\n        border: 'none', // Remove the border\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.05)', // Subtle shadow for depth\n    },\n\n    cardTitleStyle: {\n        fontSize: '1.3em',\n        fontWeight: 500,\n        alignItems: 'center',\n    },\n\n    cardTextStyle: {\n        margin: '10px 0 5px',\n        textAlign: 'left',\n        fontSize: '0.7em',\n        width: '100%',\n        lineHeight: '1.4', // Adjust line height for better readability\n    },\n\n    cardImageStyle: {\n        height: '230px', // Set a fixed height for images\n        objectFit: 'cover',\n        borderRadius: '5px 5px 5px 5px',\n        objectPosition: 'center',\n        width: '100%',\n    },\n    //   cardImageStyle: {\n    //     height: '270px',\n    //     objectFit: 'contain',\n    //     borderRadius: '5px 5px 5px 5px',\n    //     objectPosition: 'center',\n    //     width: '100%',\n    // },\n    linkStyle: {\n        textDecoration: 'none',\n        padding: 10,\n        fontWeight: 'bold',\n        fontFamily: 'Times New Roman, serif',\n        color: '#49bf9d',\n        transition: 'color 0.3s',\n    },\n\n    linkHoverStyle: {\n        color: '#007bff', // Change to desired hover color for title\n    },\n\n    githubIconStyle: {\n        marginLeft: 'auto',\n        color: '#FFD700',\n        textDecoration: 'none',\n        transition: 'color 0.3s',\n    },\n\n    githubIconHoverStyle: {\n        color: '#007bff',\n        transform: 'scale(1.2) rotate(30deg)',\n    },\n\n    // buttonStyle: {\n    //   margin: 5,\n    // },\n\n    dateStyle: {\n        fontSize: '1em',\n        color: '#888',\n        marginTop: '5px',\n        fontFamily: 'Times New Roman, serif',\n    },\n};\n\nconst componentsRenders = {\n    ul: ({ children }) => <ul style={{ paddingLeft: '0rem', paddingBottom: '0rem' }}>{children}</ul>,\n    ol: ({ children }) => <ol style={{ paddingLeft: '0rem' }}>{children}</ol>,\n    li: ({ children }) => <li style={{ paddingBottom: '0.3rem' }}>{children}</li>,\n};\n\nconst ExternalNavLink = styled.a`\n    &:hover {\n        color: ${(props) => props.theme.navbarTheme.linkHoverColor};\n    }\n    &::after {\n        background-color: ${(props) => props.theme.accentColor};\n    }\n`;\n\nconst ProjectCard = (props) => {\n    const theme = useContext(ThemeContext);\n    const parseBodyText = (text) => <ReactMarkdown children={text} components={componentsRenders} />;\n    const { projects } = props;\n    const projectArray = Object.values(projects);\n\n    const groupedProjects = {\n        'Course Projects': projectArray.filter((p) => p.type === 'course'),\n        'Research Projects': projectArray.filter((p) => p.type === 'research'),\n        'Other Projects': projectArray.filter((p) => p.type === 'others'),\n    };\n\n    // Function to render category title and line\n    const renderCategoryTitle = (type, _project) => {\n        return (\n            <>\n                <h4 style={{ textAlign: 'center', margin: '10px 0' }}>{type}</h4>\n                <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\n                    {_project.map((project) => (\n                        <Card\n                            style={{\n                                ...styles.cardStyle,\n                                backgroundColor: theme.cardBackground,\n                                borderColor: theme.cardBorderColor,\n                            }}\n                            text={theme.bsSecondaryVariant}\n                        >\n                            {project?.mediaType === 'video' ? (\n                                <Card.Img variant=\"top\" as=\"video\" controls loop style={styles.cardImageStyle}>\n                                    <source src={project?.image} type=\"video/mp4\" />\n                                    Your browser does not support the video tag.\n                                </Card.Img>\n                            ) : (\n                                <Card.Img variant=\"top\" src={project?.image} style={styles.cardImageStyle} />\n                            )}\n\n                            <Card.Body>\n                                <hr style={{ border: '1px solid #ddd', margin: '5px 0' }} />\n                                <Card.Title style={styles.cardTitleStyle}>\n                                    <ExternalNavLink\n                                        key={project.title}\n                                        href={`/${project.title.replace(/\\s+/g, '-')}`}\n                                        theme={theme}\n                                        style={styles.linkStyle}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        onMouseEnter={(e) =>\n                                            (e.currentTarget.style.color = styles.linkHoverStyle.color)\n                                        }\n                                        onMouseLeave={(e) => (e.currentTarget.style.color = styles.linkStyle.color)}\n                                    >\n                                        {project.title}\n                                    </ExternalNavLink>\n\n                                    {project.githubUrl && (\n                                        <a\n                                            href={project.githubUrl}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            style={styles.githubIconStyle}\n                                            aria-label=\"Open GitHub repository\"\n                                            onMouseEnter={(e) => {\n                                                e.currentTarget.style.color = styles.githubIconHoverStyle.color;\n                                                e.currentTarget.style.transform = styles.githubIconHoverStyle.transform;\n                                            }}\n                                            onMouseLeave={(e) => {\n                                                e.currentTarget.style.color = styles.githubIconStyle.color;\n                                                e.currentTarget.style.transform = 'scale(1) rotate(0deg)';\n                                            }}\n                                        >\n                                            <FontAwesomeIcon icon={faGithub} />\n                                        </a>\n                                    )}\n                                </Card.Title>\n\n                                <Card.Text style={styles.dateStyle}>\n                                    <FontAwesomeIcon icon={faCalendarAlt} style={styles.yearIcon} />\n                                    &nbsp;&nbsp;\n                                    {new Date(project.startDate).toLocaleDateString()}\n                                    &nbsp;-&nbsp;\n                                    {new Date(project.endDate).toLocaleDateString()}\n                                </Card.Text>\n\n                                <Card.Text style={styles.cardTextStyle}>{parseBodyText(project.bodyText)}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </div>\n                <hr style={{ border: '1px solid #ccc', margin: '10px 0' }} />\n            </>\n        );\n    };\n\n    return (\n        <Col>\n            {Object.keys(groupedProjects).map((type) => {\n                if (groupedProjects[type].length > 0) {\n                    return renderCategoryTitle(type, groupedProjects[type]);\n                }\n                return null; // Skip empty categories\n            })}\n        </Col>\n    );\n\n    // return (\n    //     <Col>\n    //         <Card\n    //             style={{\n    //                 ...styles.cardStyle,\n    //                 backgroundColor: theme.cardBackground,\n    //                 borderColor: theme.cardBorderColor,\n    //             }}\n    //             text={theme.bsSecondaryVariant}\n    //         >\n    //             {project?.mediaType === 'video' ? (\n    //                 <Card.Img variant=\"top\" as=\"video\" controls loop style={styles.cardImageStyle}>\n    //                     <source src={project?.image} type=\"video/mp4\" />\n    //                     Your browser does not support the video tag.\n    //                 </Card.Img>\n    //             ) : (\n    //                 <Card.Img variant=\"top\" src={project?.image} style={styles.cardImageStyle} />\n    //             )}\n\n    //             <Card.Body>\n    //                 <hr style={{ border: '1px solid #ddd', margin: '5px 0' }} />\n    //                 <Card.Title style={styles.cardTitleStyle}>\n    //                     <ExternalNavLink\n    //                         key={project.title}\n    //                         href={`/${project.title.replace(/\\s+/g, '-')}`}\n    //                         theme={theme}\n    //                         style={styles.linkStyle}\n    //                         target=\"_blank\"\n    //                         rel=\"noopener noreferrer\"\n    //                         onMouseEnter={(e) => (e.currentTarget.style.color = styles.linkHoverStyle.color)}\n    //                         onMouseLeave={(e) => (e.currentTarget.style.color = styles.linkStyle.color)}\n    //                     >\n    //                         {project.title}\n    //                     </ExternalNavLink>\n\n    //                     {project.githubUrl && (\n    //                         <a\n    //                             href={project.githubUrl}\n    //                             target=\"_blank\"\n    //                             rel=\"noopener noreferrer\"\n    //                             style={styles.githubIconStyle}\n    //                             aria-label=\"Open GitHub repository\"\n    //                             onMouseEnter={(e) => {\n    //                                 e.currentTarget.style.color = styles.githubIconHoverStyle.color;\n    //                                 e.currentTarget.style.transform = styles.githubIconHoverStyle.transform;\n    //                             }}\n    //                             onMouseLeave={(e) => {\n    //                                 e.currentTarget.style.color = styles.githubIconStyle.color;\n    //                                 e.currentTarget.style.transform = 'scale(1) rotate(0deg)';\n    //                             }}\n    //                         >\n    //                             <FontAwesomeIcon icon={faGithub} />\n    //                         </a>\n    //                     )}\n    //                 </Card.Title>\n\n    //                 <Card.Text style={styles.dateStyle}>\n    //                     <FontAwesomeIcon icon={faCalendarAlt} style={styles.yearIcon} />\n    //                     &nbsp;&nbsp;\n    //                     {new Date(project.startDate).toLocaleDateString()}\n    //                     &nbsp;-&nbsp;\n    //                     {new Date(project.endDate).toLocaleDateString()}\n    //                 </Card.Text>\n\n    //                 <Card.Text style={styles.cardTextStyle}>{parseBodyText(project.bodyText)}</Card.Text>\n    //             </Card.Body>\n    //         </Card>\n    //     </Col>\n    // );\n};\n\nProjectCard.propTypes = {\n    projects: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        bodyText: PropTypes.string.isRequired,\n\n        image: PropTypes.string,\n        mediaType: PropTypes.string,\n        type: PropTypes.string.isRequired,\n\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                text: PropTypes.string.isRequired,\n                href: PropTypes.string.isRequired,\n            })\n        ),\n\n        tags: PropTypes.arrayOf(PropTypes.string),\n        startDate: PropTypes.string.isRequired,\n        endDate: PropTypes.string.isRequired,\n        githubUrl: PropTypes.string,\n        detailsUrl: PropTypes.string,\n    }).isRequired,\n};\n\nexport default ProjectCard;\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["styles","cardStyle","borderRadius","overflow","height","border","display","flexDirection","justifyContent","boxShadow","cardTitleStyle","fontSize","fontWeight","alignItems","cardTextStyle","margin","textAlign","width","lineHeight","cardImageStyle","objectFit","objectPosition","linkStyle","textDecoration","padding","fontFamily","color","transition","linkHoverStyle","githubIconStyle","marginLeft","githubIconHoverStyle","transform","dateStyle","marginTop","componentsRenders","ul","_ref","children","_jsx","style","paddingLeft","paddingBottom","ol","_ref2","li","_ref3","ExternalNavLink","styled","a","props","theme","navbarTheme","linkHoverColor","accentColor","useContext","ThemeContext","projects","projectArray","Object","values","groupedProjects","filter","p","type","Col","keys","map","length","renderCategoryTitle","_project","_jsxs","_Fragment","flexWrap","project","Card","backgroundColor","cardBackground","borderColor","cardBorderColor","text","bsSecondaryVariant","mediaType","Img","variant","as","controls","loop","src","image","Body","Title","href","title","replace","target","rel","onMouseEnter","e","currentTarget","onMouseLeave","githubUrl","FontAwesomeIcon","icon","faGithub","Text","faCalendarAlt","yearIcon","Date","startDate","toLocaleDateString","endDate","bodyText","ReactMarkdown","components","CardBody","React","ref","className","bsPrefix","Component","useBootstrapPrefix","classNames","displayName","CardFooter","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","body","assign","Subtitle","Link","Header","Footer","ImgOverlay"],"sourceRoot":""}